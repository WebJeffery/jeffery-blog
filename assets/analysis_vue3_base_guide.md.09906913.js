import{_ as e,o as a,c as t,Q as i}from"./chunks/framework.69210375.js";const m=JSON.parse('{"title":"Vue3 源码学习指南","description":"","frontmatter":{},"headers":[],"relativePath":"analysis/vue3/base/guide.md","lastUpdated":1711638490000}'),l={name:"analysis/vue3/base/guide.md"},o=i('<h1 id="vue3-源码学习指南" tabindex="-1">Vue3 源码学习指南 <a class="header-anchor" href="#vue3-源码学习指南" aria-label="Permalink to &quot;Vue3 源码学习指南&quot;">​</a></h1><h2 id="为什么阅读源码" tabindex="-1">为什么阅读源码 <a class="header-anchor" href="#为什么阅读源码" aria-label="Permalink to &quot;为什么阅读源码&quot;">​</a></h2><p>阅读框架源码有诸多好处</p><ol><li>知其然所以然。理解框架背后的运行原理，使用框架更加的有掌控，即使遇到非常棘手的问题知道从哪些方面分析和解决问题</li><li>提高个人技术水平。框架是社区优秀大牛贡献的代码，学习他们的编程思想，代码规范，设计模式等等</li><li>学习造轮子。理解框架的设计思想和结构后，知道一个框架要考虑哪些方面，在造轮子搭建新项目有参考的价值。</li></ol><h2 id="阅读源码方法" tabindex="-1">阅读源码方法 <a class="header-anchor" href="#阅读源码方法" aria-label="Permalink to &quot;阅读源码方法&quot;">​</a></h2><p>阅读源码，并不是一上来就啃源码，那样会被绕晕，在庞大的代码量面前被劝退。按照以往的经验。首先是搭建好开发调试环境，让项目跑起来，这时候心里就有底了。接着了解项目的架构和技术栈，知道大体的目录结构功能，做的是什么事；最后带着目的和问题去阅读源码：例如</p><ul><li>项目初始化和挂载流程是什么？</li><li>响应式系统是怎么实现的？</li><li>nextTick 异步更新策略是怎么实现的？</li><li>……</li></ul><p>带着这些问题一步一步的去看，一步一步的调试，单点突破，沿着这条主线，耐心寻找到想要的答案。</p>',8),r=[o];function s(n,_,c,d,u,h){return a(),t("div",null,r)}const f=e(l,[["render",s]]);export{m as __pageData,f as default};
